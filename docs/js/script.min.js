function snow(){let e,t,i=[],n=100;function r(){this.x=Math.random()*(e.width+n)-50,this.y=Math.random()*(e.height+n)-50,this.z=.5*Math.random()+.5,this.vx=(2*Math.random()-.5)*this.z,this.vy=(1.5*Math.random()+1.5)*this.z,this.fill="rgba(255,255,255,"+(.5*Math.random()+.5)+")",this.dia=(2.5*Math.random()+1.5)*this.z,i.push(this)}const o=e=>{let t;for(let i=0;i<e;i++)t=new r},s=t=>{t.x+=t.vx,t.y+=t.vy,t.x>e.width+50?t.x=-50:t.xpos<-50&&(t.x=e.width+50),t.y>e.height+50?t.y=-50:t.y<-50&&(t.y=e.height+50)},l=()=>{t.clearRect(0,0,e.width,e.height);for(let e=0;e<i.length;e++)n=i[e],t.beginPath(),t.strokeStyle="transparent",t.fillStyle=n.fill,t.arc(n.x,n.y,n.dia,0,2*Math.PI),t.closePath(),t.stroke(),t.fill(),s(i[e]);var n},a=()=>{e.width=window.innerWidth,e.height=window.innerHeight,l()};document.addEventListener("DOMContentLoaded",(()=>{e=document.getElementById("canvas"),t=e.getContext("2d"),a(),o(700),l(),setInterval(l,25),window.addEventListener("resize",a,!1)}),!1)}snow();const prizes=[{text:"10% Off ",color:"#006989",probability:.5},{text:"Free Website",color:"#A3BAC3",probability:.05},{text:"Free hosting 6 months",color:"#EAEBED",probability:.15},{text:"Free hosting for 1 month",color:"#8380B6",probability:.3},{text:"Free hosting 2 months",color:"#45F0DF",probability:.05},{text:"Free hosting 3 months",color:"#F2A65A",probability:.05}],modalWin=document.querySelector(".modal-win"),wheel=document.querySelector(".content__deal-wheel"),spinner=wheel.querySelector(".content__spinner"),trigger=wheel.querySelector(".cap"),ticker=wheel.querySelector(".ticker"),prizeSlice=360/prizes.length,prizeOffset=Math.floor(180/prizes.length),spinClass="is-spinning",selectedClass="selected",spinnerStyles=window.getComputedStyle(spinner);let tickerAnim,prizeNodes,angleOfResult=90,rotation=0,currentSlice=0;const createPrizeNodes=()=>{prizes.forEach((({text:e,color:t},i)=>{const n=prizeSlice*i*-1-prizeOffset;spinner.insertAdjacentHTML("beforeend",`<li class="prize" style="--rotate: ${n}deg">\n\t\t\t\t<span class="text">${e}</span>\n\t  \t\t</li>`)}))},createConicGradient=()=>{spinner.setAttribute("style",`background: conic-gradient(\n\t  \t\tfrom -90deg,\n\t  \t\t${prizes.map((({color:e},t)=>`${e} 0 ${100/prizes.length*(prizes.length-t)}%`)).reverse()}\n\t\t);`)},rotate=()=>{let e=prizes[0],t=[];for(let e=0;e<prizes.length;e++)for(let i=0;i<100*prizes[e].probability;i++)t.push(e);let i=t[Math.floor(Math.random()*t.length)];e=prizes[i];let n=Math.floor(4*Math.random())+3,r=i*prizeSlice,o=Math.floor(Math.random()*prizeSlice);return console.log("You won: "+e.text),console.log("The wheel turns "+(360*n+r+o)+"° ("+n+" full spin + "+r+"° + "+o+"°)"),360*n+r+o+angleOfResult},setupWheel=()=>{spinner.setAttribute("style",`background: conic-gradient(\n\t  \t\tfrom -90deg,\n\t  \t\t${prizes.map((({color:e},t)=>`${e} 0 ${100/prizes.length*(prizes.length-t)}%`)).reverse()}\n\t\t);`),prizes.forEach((({text:e,color:t},i)=>{const n=prizeSlice*i*-1-prizeOffset;spinner.insertAdjacentHTML("beforeend",`<li class="prize" style="--rotate: ${n}deg">\n\t\t\t\t<span class="text">${e}</span>\n\t  \t\t</li>`)})),prizeNodes=wheel.querySelectorAll(".prize")},runTickerAnimation=()=>{const e=spinnerStyles.transform.split("(")[1].split(")")[0].split(","),t=e[0],i=e[1];let n=Math.atan2(i,t);n<0&&(n+=2*Math.PI);const r=Math.round(n*(180/Math.PI)),o=Math.floor((r-90)/prizeSlice);currentSlice!==o&&(ticker.style.animation="none",setTimeout((()=>ticker.style.animation=null),10),currentSlice=o),tickerAnim=requestAnimationFrame(runTickerAnimation)},winNotification=e=>{modalWin.classList.add("active"),modalWin.innerHTML+=`You won ${e}`,setTimeout((()=>{modalWin.classList.remove("active"),modalWin.classList.add("out")}),6e3)},selectPrize=()=>{const e=Math.floor((rotation-angleOfResult)/prizeSlice);var t;prizeNodes[e].classList.add("selected"),t=prizeNodes[e].innerText,modalWin.classList.add("active"),modalWin.innerHTML+=`You won ${t}`,setTimeout((()=>{modalWin.classList.remove("active"),modalWin.classList.add("out")}),6e3)};modalWin.addEventListener("click",(()=>{modalWin.classList.remove("active"),modalWin.classList.add("out")})),trigger.addEventListener("click",(()=>{trigger.disabled=!0,rotation=Math.floor(rotate()),prizeNodes.forEach((e=>e.classList.remove("selected"))),wheel.classList.add(spinClass),spinner.style.setProperty("--rotate",rotation),ticker.style.animation="none",runTickerAnimation()})),spinner.addEventListener("transitionend",(()=>{cancelAnimationFrame(tickerAnim),trigger.focus(),rotation%=360,selectPrize(),wheel.classList.remove(spinClass),spinner.style.setProperty("--rotate",rotation),confettiAnimation()})),spinner.setAttribute("style",`background: conic-gradient(\n\t  \t\tfrom -90deg,\n\t  \t\t${prizes.map((({color:e},t)=>`${e} 0 ${100/prizes.length*(prizes.length-t)}%`)).reverse()}\n\t\t);`),prizes.forEach((({text:e,color:t},i)=>{const n=prizeSlice*i*-1-prizeOffset;spinner.insertAdjacentHTML("beforeend",`<li class="prize" style="--rotate: ${n}deg">\n\t\t\t\t<span class="text">${e}</span>\n\t  \t\t</li>`)})),prizeNodes=wheel.querySelectorAll(".prize");let duration=1e4,end=Date.now()+duration,colors=["#fff","#000","#fa2020"];function confettiAnimation(){confetti({particleCount:2,angle:60,spread:55,origin:{x:0},colors:colors}),confetti({particleCount:2,angle:120,spread:55,origin:{x:1},colors:colors}),Date.now()<end&&requestAnimationFrame(confettiAnimation)}